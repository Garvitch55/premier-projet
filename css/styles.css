/*chargé la police d'écriture*/
@font-face{
    font-family: "Sansation";
    src: url("../fonts/Sansation-Regular.ttf") format("truetype");
}
@font-face{
    font-family: "Tag";
    src: url("../fonts/Tagesschrift-Regular.ttf") format("truetype");
}


/*mettre la police d'écriture, et celle de secours*/
body {
    font-family: "Sansation", sans-serif;
}





table, th, td {
    border: solid 1px black;
    border-collapse: collapse;
    padding: 2px;
    text-align: center;
}

/* L'ecriture de classe ou d'id sont au format Kebabcase */
.table-wrapper {
    width: 50%;
}

#table-100w {
    width: 100%;
}

textarea {
    resize: none;
}

.titre_base {
    /* Color : La couleur du texte */
    color: rgb(15, 22, 126);
    /* Text-align - > l'alignement du text*/
    text-align: center;
    /* couleur du fond*/
    background-color: rgb(177, 111, 12);
    padding: 10px;
    text-decoration: underline;
}

h1 {
    text-align: center;
    text-decoration: underline;
    font: bold;
}

h2 {
    text-decoration: underline;
    font: bold;
}

h3 {
    text-decoration: underline;
    font: bold;
}

h4 {
    text-decoration: underline;
    font: bold;
}




/* ">li" Permet de sélectionner l'enfant direct de l'élément #liste_cours */
#liste_cours > li {
                    /* list_style permet la désactivation des puces */
                    list-style: none;
                    margin-top: 5px;
                    margin-bottom: 5px;
                    border: solid 1px #5bc0eb;
                    width: fit-content;
                    padding: 3px;
                    border-radius: 5px;
                    background-color: #11829e;
}
#liste_cours > li > a {
                    /* enlève le souligner des liens*/
                    text-decoration: none;
                    color: black;

}

#liste_cours > li:hover {
                   background-color: #fbb13c;
                   border: solid 1px #ac3931;
}
#liste_cours > li > a:hover {
                    color: white;

}

/*                                                  
  ____  ____  __ _________  ______   ____   ______ ______
_/ ___\/  _ \|  |  \_  __ \/  ___/ _/ ___\ /  ___//  ___/
\  \__(  <_> )  |  /|  | \/\___ \  \  \___ \___ \ \___ \ 
 \___  >____/|____/ |__|  /____  >  \___  >____  >____  >
     \/                        \/       \/     \/     \/ 

 */

.carre {

}

.green {
    background-color: green;
}

.blue {
    background-color: blue;
}

.orange {

    background-color: orange;

}

.square{
    width: 50px;
    height: 50px;
}
/* pour créer un rond dans un carré (round) avec boder.radius */
.round {
    width: 50px;
    height: 50px;
    border-radius: 50%;
}

.text-color-red {
color: red;
}

/* si on met une div en inline sachant que inline ne gère pas la hauteur ni la largeur, on ne la verra pas, l'inline est utilisé pricipalement pour du texte */
.cobaye {
    display: inline;
}

/* inline-block autorise la hauteur et la largeur, permet aussi d'accumuler les éléments sur la longueur et de passer à la ligne quand l'élément n'a plus de place*/
/* affichage en ligne display: inline-block; */
.cobaye2 {
    display: inline-block;
}

.nav-bar {
    background-color: darkmagenta;
        /* 10vh reste à 10% de l'écran*/
    height: 10vh;
    width: 100%;
          /* permet au texte à l'intérieur de la div d'être centré verticalement, mettre la même hauteur de la div */
    line-height: 10vh;
}

body {
    /* minimum 100vh minimum 100% de l'écran*/
    min-height : 100vh;
}

.nav-bar-list > li {
    list-style: none;
    display: inline-block;
    margin-left: 5px;
}

.nav-bar-list > li > a {
    text-decoration: none;
    color: white;

}

.nav-bar-list > li > a:hover {
    color: orange;
}

.parent > p {
color: green;

}

.all-children-parent p {
    color: red;
}

h4 + p {
    /*Attention le h4 est en gras par défaut*/
    /* Pour mettre en gras et en bleu le premier p */
    font-weight: bold;
    color: blue;
}

h5 ~ p {
    font-weight: bold;
    color: orangered;
}

/* Les pseudos éléments première lettre */
.text-chiant::first-letter {
    color: red;
    font-weight: bold;
    /* 3rem c'est 3 fois plus grand que la taille de la police de base */
    font-size: 3rem;
}

.text-chiant {
    font-family: "Tag", sans-serif;
}


#super-button {
    border: solid 1px rgb(75, 13, 218);
    background-color: black;
    padding: 5px;
    border-radius: 10px;
    color: white;
    text-decoration: none;
}

#super-button:hover {
    border: solid 1px rgb(204, 218, 13);
    background-color: blueviolet;
}


/* Pseudo élément après❤ */
#super-button::after {
    /* Mettre toujours la proriété content */
    content:"❤";
    color: orange;
}

/* Pseudo élément ❤ */
#super-button:hover::after {
    content: "👍";
    /* transform fait grossir le content */
    transform: scale(1.3);
    display: inline-block;
}

.box p {
    color: red;
}

.box span {
    color: green;
}

p ~ span {
    color: blue;
}

.container > p {
    color: violet;
}

.container .box h2 {
    color: orange;
}

.box h2::before {
/* Mettre toujours la proriété content */
    content:"→";
}

.container > p::after {
   content:"(important)";
   font-size: 0.5rem;
}

.box p::after {
   content:"en italique";
   font-style: italic;
}




/*
___________.__                 
\_   _____/|  |   ____ ___  ___
 |    __)  |  | _/ __ \\  \/  /
 |     \   |  |_\  ___/ >    < 
 \___  /   |____/\___  >__/\_ \
     \/              \/      \/
*/


/* C'est toujours le conteneur des élémentrs qui a le display flex */


.container-flex {
    display: flex;
    background-color: aquamarine;
    height: 30vh;
    /* Par défaut les éléments dans le conteneur seront alignés horizontalement. */
}

.box-flex {
    height : 20%; /* CA SERA 20 % du parent*/
    /* width: calc(30vh*0.2); */
    background-color: chocolate;
    /* Pour éviter de calculer la largeur, on utilise une mise à l'échelle */
    aspect-ratio: 1/1;
    margin-left: 1px;
    margin-bottom: 1px;
}

.box-flex-col{
    width: 6vh;
    aspect-ratio: 1/1;
    background-color: crimson;
    margin-left: 1px;
    margin-bottom: 1px;
}

.col {
    flex-direction: column;
}

.end {
    justify-content: end;
}

.center {
    justify-content: center;
}

.space-between {
    justify-content: space-between;
}

.space-evenly {
justify-content: space-evenly;
}

.space-around {
    justify-content: space-around;
}

.align-items-end {
    align-items: end;
}

.align-items-center {
    align-items: center;
}

.align-items-stretch {
    align-items: stretch;
}

.wrap {
    flex-wrap: wrap;
}

.flex{
height: 10vh;
width: 100%;
display: flex;
margin-bottom: 2rem;
}

.flex1{
    /* Pour faire un flex grow, le plus rapide est d'utiliser flex: taille en grow */
    flex : 1;

}

.flex2{
    flex:2;

}

.flex3{
    flex: 3;

}


.flex p {
    color: white;
    font-size: 1.5rem;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-weight: bold;
}

.flex > *{
    display: flex;
    justify-content: center;
    align-items: center;
}
.orange{
    background-color: orange;
}


.blue{
    background-color: blue;
}

.green{
    background-color: green;
}

.violet{
    background-color: violet;
}

.yellow{
    background-color: yellow;
}    <h3>18 - Exemple flex grow</h3>